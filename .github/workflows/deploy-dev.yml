name: Deploy dev

on:
  push:
    branches: ['dev']
  pull_request:
    branches: ['dev']

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Create .env file
        uses: ozaytsev86/create-env-file@v1
        with:
          ENV_DEPLOY_URL: 'https://dev.danceweekend.art'
          ENV_NEXT_PUBLIC_PAYPAL_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_PAYPAL_CLIENT_ID }}
          ENV_PAYPAL_SECRET: ${{ secrets.PAYPAL_SECRET }}
          ENV_PAYPAL_API_URL: ${{ secrets.PAYPAL_API_URL }}
          ENV_NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
          ENV_STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          ENV_SENDINBLUE_SECRET: ${{ secrets.SENDINBLUE_SECRET }}

      - uses: actions/checkout@v3
      - name: Build the Docker image
        run: docker build -t cloud.canister.io:5000/vkluchenkov/danceweekend:latest-dev .

      - name: Login to Canister
        uses: docker/login-action@v2
        with:
          registry: cloud.canister.io:5000
          username: ${{ secrets.CANISTERWRITELOGIN }}
          password: ${{ secrets.CANISTERWRITEPASS }}

      - name: Push the Docker image
        run: docker push cloud.canister.io:5000/vkluchenkov/danceweekend:latest-dev

      - name: Deploy
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SSHHOST }}
          username: ${{ secrets.SSHUSER }}
          key: ${{ secrets.SSHKEY }}
          passphrase: ${{ secrets.SSHPASS }}
          script: |
            docker login --username=${{ secrets.CANISTERLOGIN }} --password=${{ secrets.CANISTERPASS }} cloud.canister.io:5000
            docker pull cloud.canister.io:5000/vkluchenkov/danceweekend:latest-dev
            docker stop Danceweekend-dev
            docker rm Danceweekend-dev
            docker run -d -p 49162:3000 --name=Danceweekend-dev --restart=always --pull=always cloud.canister.io:5000/vkluchenkov/danceweekend:latest-dev
            docker system prune -f
